apiVersion: v1
kind: PersistentVolume
metadata:
  name: keycloak-postgres-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  awsElasticBlockStore:
    volumeID: vol-0eded0afab85dc086
    fsType: ext4

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  resources:
    requests:
      storage: 10Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak-postgres
    spec:
      initContainers:
        - name: format-and-resize-filesystem
          image: alpine
          command:
            - sh
            - -c
            - |
              apk add --no-cache e2fsprogs && \
              # Check if /var/lib/postgresql/data is already formatted
              if ! blkid /var/lib/postgresql/data >/dev/null 2>&1; then
                echo "Filesystem not found, formatting..."
                mkfs.ext4 /var/lib/postgresql/data || echo "Formatting failed"
              else
                echo "Filesystem exists, skipping format"
              fi && \
              resize2fs /var/lib/postgresql/data || echo "Resize failed or not needed"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      containers:
        - name: keycloak-postgres
          image: postgres:15.3
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: keycloak-postgres-dbcreation-script
              mountPath: /docker-entrypoint-initdb.d
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources: {}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: keycloak-postgres-dbcreation-script
          configMap:
            name: keycloak-postgres-dbcreation-script
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: keycloak-postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgres
spec:
  selector:
    app: keycloak-postgres
  ports:
    - port: 5432
      targetPort: 5432
      name: postgres
  type: ClusterIP